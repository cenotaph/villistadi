.project_container
  .row
    .small-12.columns
      %h2= @project.name

  .row
    .small-4.columns
      - if @project.image?
        = image_tag @project.image.url(:box)
    .small-8.columns.end
      %h5administrators= raw @project.tagline
      = raw @project.description
  .row.actions
    .small-12.columns
      - if can? :create, @project.posts.build
        = link_to t(:create_new_post), new_project_post_path(@project), :class =>  [:button, :tiny, :radius]
      - if can? :create, Event
        = link_to t(:submit_new_event), new_project_event_path(:project_id => @project.id), class: [:button, :radius, :tiny]
        
      - if can? :edit, @project
        = link_to t(:edit_project_settings), edit_project_path(@project), :class => [:button, :tiny, :radius]
      - if user_signed_in?
        - if !@project.users.include?(current_user)
          = link_to t(:join_project), join_project_path(@project), class: [:button, :radius, :tiny]
        - else
          = link_to t(:leave_project), leave_project_path(@project), class: [:button, :radius, :tiny], :data => {:confirm => t(:confirm_leaving_project)}
      - else
        = link_to t(:join_project), new_session_path(:user), class: [:button, :radius, :tiny]
      - if can? :destroy, @project
        = link_to t(:delete_project), @project, :method => :delete, class: [:button, :radius, :alert, :tiny], data: {confirm: t(:delete_project_confirmation)}
  .row
    %dl.tabs{:"data-tab" => ""}
      %dd.active= link_to t(:announcements), '#announcements'
      - if @project.has_forum
        %dd= link_to t(:forum), '#forum'
      %dd= link_to t(:members), '#members'
    .tabs-content
      #announcements.content.active.row
        .small-12.columns
          - if @project.posts.to_a.delete_if{|p| p.new_record? }.empty?
            %p= t :no_announcements
          - else
            - @project.posts.to_a.delete_if{|p| p.new_record? }.sort_by{|x| x.published_at }.each do |p|
              - next if p.new_record?
              .row.post
                .small-8.columns
                  .title= link_to p.title, project_post_path(@project, p)
                  .metadata= t(:posted_by, :poster => p.creator.name, :when => l(p.created_at, :format => :long))
                  .excerpt= raw truncate_html(sanitize(p.body, tags: %w(table tr b strong i em u a td), attributes: %w(href src name)), :length => 600)
                  .read_more= link_to t(:read_more), project_post_path(@project, p)
      - if @project.has_forum
        #forum.content
          - @project.forumposts.each do |fp|
            .forum_post.row{:class => cycle('odd', 'even')}
              .small-6.columns.title= link_to fp.title, project_forumpost_path(:project_id => @project.id, :id => fp.id)
              .small-3.columns.metadata.end
                .posted_at= t(:created_by, :poster => fp.user.name, :when => l(fp.created_at, :format => :short))
          - if can? :create, @project.forumposts.build
            .row
              .small-12.columns= link_to t(:create_post), new_project_forumpost_path(:project_id => @project.id), class: [:button, :small, :radius, :secondary]
      #members.content
        .row
          - @project.users.each do |user|
            .small-3.columns.end
              = link_to user.name, user
              - if @project.administrators.include?(user)
                %p
                  %b= t(:project_admin)
            