    
.row.place_container
  .small-12.columns
    .row
      .small-6.columns
        %h1= @place.name
        .description= raw @place.description
        
        %h2= t(:getting_there)
        .description= raw @place.getting_there
        
        
      .small-6.columns
        #map
        .row
          .small-9.columns.small-offset-2
            .facts_box
              %h3= t(:facts)
              = raw @place.facts
            %h2= t :see_and_experience
            .description= raw @place.see_and_experience
            %h2= t :more_information
            .description= raw @place.more_information
            
            - if @place.pdf?
              %h2= link_to t(:download_PDF), @place.pdf.url
              
          %script{:type => "text/javascript"}
            function set_spots() {
            var infoWindow = new google.maps.InfoWindow();
            var markers = [];
            - @place.spots.each do |spot|
              var marker_#{spot.id.to_s} = new google.maps.Marker({
              position: new google.maps.LatLng(#{spot.latitude}, #{spot.longitude}),
              map: map,
              title: "#{spot.name}"
              });
              markers.push(marker_#{spot.id.to_s});
              google.maps.event.addListener(marker_#{spot.id.to_s}, 'click', function() {
              var html='<div style="clear: float;"><strong>#{spot.name}</strong></div>';
              infoWindow.setContent(html);
              infoWindow.open(map, marker_#{spot.id.to_s})
              });
            }
  
          :javascript
            function buildmap() {
              var myOptions = {
                zoom: 15,
                 center: new google.maps.LatLng(#{sprintf("%5f", @place.center.first)}, #{sprintf("%5f", @place.center.last)}),
                mapTypeId: google.maps.MapTypeId.SATELLITE
              }
              return new google.maps.Map(document.getElementById("map"), myOptions);
            }

            function initialize() {

              map = buildmap();
              var ne = new google.maps.LatLng(#{@place.ne_lat}, #{@place.ne_lng});
              var sw = new google.maps.LatLng(#{@place.sw_lat}, #{@place.sw_lng});
              var bounds = new google.maps.LatLngBounds(sw, ne);
              // map.fitBounds(bounds)
              set_spots();
              return map;
              map.setZoom(15);
            }
  
            

  - unless @place.photos.empty?
    .photo_container
      .row
        .small-12.columns
          %h2= t :photo_gallery
      .photo_carousel.row.small-centered
        - @place.photos.each do |p|
          - if p.image?
            .photo.small-4.columns
              = image_tag p.image.url(:box)
          

        
  - unless @place.future_of.blank?
    .row
      .small-12.columns
        %h2= t :future_of, :place => @place.name
        .description= raw @place.future_of

= content_for :jquery do
  :plain
    $('.photo_carousel').slick({infinite: true,
      slidesToShow: 3,
      adaptiveHeight: true,
      autoplay: true,
      autoplaySpeed: 2400,
      slidesToScroll: 1
    });